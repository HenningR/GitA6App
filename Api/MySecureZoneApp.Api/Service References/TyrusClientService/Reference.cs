//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MySecureZoneApp.Api.TyrusClientService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DbBase", Namespace="http://schemas.datacontract.org/2004/07/Citadel.Framework.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.EntityBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.ComplianceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.Will))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.BrainProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.StaffEntitySharing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.Client))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.Individual))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.NonIndividual))]
    public partial class DbBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityBase", Namespace="http://schemas.datacontract.org/2004/07/Citadel.Framework.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.ComplianceType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.Will))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.BrainProfile))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.StaffEntitySharing))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.Client))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.Individual))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.NonIndividual))]
    public partial class EntityBase : MySecureZoneApp.Api.TyrusClientService.DbBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplianceType", Namespace="http://schemas.datacontract.org/2004/07/Citadel.Clients.Entity.Compliance")]
    [System.SerializableAttribute()]
    public partial class ComplianceType : MySecureZoneApp.Api.TyrusClientService.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ComplianceTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComplianceTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StoredProcedureField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ComplianceTypeID {
            get {
                return this.ComplianceTypeIDField;
            }
            set {
                if ((this.ComplianceTypeIDField.Equals(value) != true)) {
                    this.ComplianceTypeIDField = value;
                    this.RaisePropertyChanged("ComplianceTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComplianceTypeName {
            get {
                return this.ComplianceTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComplianceTypeNameField, value) != true)) {
                    this.ComplianceTypeNameField = value;
                    this.RaisePropertyChanged("ComplianceTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDisabled {
            get {
                return this.IsDisabledField;
            }
            set {
                if ((this.IsDisabledField.Equals(value) != true)) {
                    this.IsDisabledField = value;
                    this.RaisePropertyChanged("IsDisabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StoredProcedure {
            get {
                return this.StoredProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.StoredProcedureField, value) != true)) {
                    this.StoredProcedureField = value;
                    this.RaisePropertyChanged("StoredProcedure");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Will", Namespace="http://schemas.datacontract.org/2004/07/Citadel.Clients.Entity.Estate")]
    [System.SerializableAttribute()]
    public partial class Will : MySecureZoneApp.Api.TyrusClientService.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MySecureZoneApp.Api.TyrusClientService.Client ExecutorOfWillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ExecutorOfWillLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExecutorOfWillOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExecutorOfWillSIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ExecutorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasWillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short LocationOfOrigonalLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationOfOrigonalOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonResponsibleForDraftingIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PersonResponsibleForDraftingOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short PreferredWillSupplierLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PreferredWillSupplierOtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReviewedByIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReviewedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SafeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SignedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short WillTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MySecureZoneApp.Api.TyrusClientService.Client ExecutorOfWill {
            get {
                return this.ExecutorOfWillField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutorOfWillField, value) != true)) {
                    this.ExecutorOfWillField = value;
                    this.RaisePropertyChanged("ExecutorOfWill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ExecutorOfWillL {
            get {
                return this.ExecutorOfWillLField;
            }
            set {
                if ((this.ExecutorOfWillLField.Equals(value) != true)) {
                    this.ExecutorOfWillLField = value;
                    this.RaisePropertyChanged("ExecutorOfWillL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExecutorOfWillOther {
            get {
                return this.ExecutorOfWillOtherField;
            }
            set {
                if ((object.ReferenceEquals(this.ExecutorOfWillOtherField, value) != true)) {
                    this.ExecutorOfWillOtherField = value;
                    this.RaisePropertyChanged("ExecutorOfWillOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExecutorOfWillSID {
            get {
                return this.ExecutorOfWillSIDField;
            }
            set {
                if ((this.ExecutorOfWillSIDField.Equals(value) != true)) {
                    this.ExecutorOfWillSIDField = value;
                    this.RaisePropertyChanged("ExecutorOfWillSID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ExecutorType {
            get {
                return this.ExecutorTypeField;
            }
            set {
                if ((this.ExecutorTypeField.Equals(value) != true)) {
                    this.ExecutorTypeField = value;
                    this.RaisePropertyChanged("ExecutorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasWill {
            get {
                return this.HasWillField;
            }
            set {
                if ((this.HasWillField.Equals(value) != true)) {
                    this.HasWillField = value;
                    this.RaisePropertyChanged("HasWill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short LocationOfOrigonalL {
            get {
                return this.LocationOfOrigonalLField;
            }
            set {
                if ((this.LocationOfOrigonalLField.Equals(value) != true)) {
                    this.LocationOfOrigonalLField = value;
                    this.RaisePropertyChanged("LocationOfOrigonalL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationOfOrigonalOther {
            get {
                return this.LocationOfOrigonalOtherField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationOfOrigonalOtherField, value) != true)) {
                    this.LocationOfOrigonalOtherField = value;
                    this.RaisePropertyChanged("LocationOfOrigonalOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonResponsibleForDraftingID {
            get {
                return this.PersonResponsibleForDraftingIDField;
            }
            set {
                if ((this.PersonResponsibleForDraftingIDField.Equals(value) != true)) {
                    this.PersonResponsibleForDraftingIDField = value;
                    this.RaisePropertyChanged("PersonResponsibleForDraftingID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PersonResponsibleForDraftingOther {
            get {
                return this.PersonResponsibleForDraftingOtherField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonResponsibleForDraftingOtherField, value) != true)) {
                    this.PersonResponsibleForDraftingOtherField = value;
                    this.RaisePropertyChanged("PersonResponsibleForDraftingOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short PreferredWillSupplierL {
            get {
                return this.PreferredWillSupplierLField;
            }
            set {
                if ((this.PreferredWillSupplierLField.Equals(value) != true)) {
                    this.PreferredWillSupplierLField = value;
                    this.RaisePropertyChanged("PreferredWillSupplierL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PreferredWillSupplierOther {
            get {
                return this.PreferredWillSupplierOtherField;
            }
            set {
                if ((object.ReferenceEquals(this.PreferredWillSupplierOtherField, value) != true)) {
                    this.PreferredWillSupplierOtherField = value;
                    this.RaisePropertyChanged("PreferredWillSupplierOther");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReviewedByID {
            get {
                return this.ReviewedByIDField;
            }
            set {
                if ((this.ReviewedByIDField.Equals(value) != true)) {
                    this.ReviewedByIDField = value;
                    this.RaisePropertyChanged("ReviewedByID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReviewedDate {
            get {
                return this.ReviewedDateField;
            }
            set {
                if ((this.ReviewedDateField.Equals(value) != true)) {
                    this.ReviewedDateField = value;
                    this.RaisePropertyChanged("ReviewedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SafeNumber {
            get {
                return this.SafeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SafeNumberField, value) != true)) {
                    this.SafeNumberField = value;
                    this.RaisePropertyChanged("SafeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SignedDate {
            get {
                return this.SignedDateField;
            }
            set {
                if ((this.SignedDateField.Equals(value) != true)) {
                    this.SignedDateField = value;
                    this.RaisePropertyChanged("SignedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short WillType {
            get {
                return this.WillTypeField;
            }
            set {
                if ((this.WillTypeField.Equals(value) != true)) {
                    this.WillTypeField = value;
                    this.RaisePropertyChanged("WillType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrainProfile", Namespace="http://schemas.datacontract.org/2004/07/Citadel.Clients.Entity.CRM")]
    [System.SerializableAttribute()]
    public partial class BrainProfile : MySecureZoneApp.Api.TyrusClientService.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BrainProfileL1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BrainProfileL2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BrainProfilePercentageLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BrainProfilePercentageRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BrainProfileR1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BrainProfileR2Field;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BrainProfileL1 {
            get {
                return this.BrainProfileL1Field;
            }
            set {
                if ((this.BrainProfileL1Field.Equals(value) != true)) {
                    this.BrainProfileL1Field = value;
                    this.RaisePropertyChanged("BrainProfileL1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BrainProfileL2 {
            get {
                return this.BrainProfileL2Field;
            }
            set {
                if ((this.BrainProfileL2Field.Equals(value) != true)) {
                    this.BrainProfileL2Field = value;
                    this.RaisePropertyChanged("BrainProfileL2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BrainProfilePercentageL {
            get {
                return this.BrainProfilePercentageLField;
            }
            set {
                if ((this.BrainProfilePercentageLField.Equals(value) != true)) {
                    this.BrainProfilePercentageLField = value;
                    this.RaisePropertyChanged("BrainProfilePercentageL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BrainProfilePercentageR {
            get {
                return this.BrainProfilePercentageRField;
            }
            set {
                if ((this.BrainProfilePercentageRField.Equals(value) != true)) {
                    this.BrainProfilePercentageRField = value;
                    this.RaisePropertyChanged("BrainProfilePercentageR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BrainProfileR1 {
            get {
                return this.BrainProfileR1Field;
            }
            set {
                if ((this.BrainProfileR1Field.Equals(value) != true)) {
                    this.BrainProfileR1Field = value;
                    this.RaisePropertyChanged("BrainProfileR1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BrainProfileR2 {
            get {
                return this.BrainProfileR2Field;
            }
            set {
                if ((this.BrainProfileR2Field.Equals(value) != true)) {
                    this.BrainProfileR2Field = value;
                    this.RaisePropertyChanged("BrainProfileR2");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StaffEntitySharing", Namespace="http://schemas.datacontract.org/2004/07/Citadel.Framework.Staff.Entity")]
    [System.SerializableAttribute()]
    public partial class StaffEntitySharing : MySecureZoneApp.Api.TyrusClientService.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowUpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FilterOnEntityAccountTypeLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid FilterOnEntityCompanyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FilterOnEntityOfficeLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrimaryContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SharedClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SharedStaffGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SharedStaffIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StaffGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StaffIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UseFiltersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowUpdate {
            get {
                return this.AllowUpdateField;
            }
            set {
                if ((this.AllowUpdateField.Equals(value) != true)) {
                    this.AllowUpdateField = value;
                    this.RaisePropertyChanged("AllowUpdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FilterOnEntityAccountTypeL {
            get {
                return this.FilterOnEntityAccountTypeLField;
            }
            set {
                if ((this.FilterOnEntityAccountTypeLField.Equals(value) != true)) {
                    this.FilterOnEntityAccountTypeLField = value;
                    this.RaisePropertyChanged("FilterOnEntityAccountTypeL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FilterOnEntityCompanyID {
            get {
                return this.FilterOnEntityCompanyIDField;
            }
            set {
                if ((this.FilterOnEntityCompanyIDField.Equals(value) != true)) {
                    this.FilterOnEntityCompanyIDField = value;
                    this.RaisePropertyChanged("FilterOnEntityCompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FilterOnEntityOfficeL {
            get {
                return this.FilterOnEntityOfficeLField;
            }
            set {
                if ((this.FilterOnEntityOfficeLField.Equals(value) != true)) {
                    this.FilterOnEntityOfficeLField = value;
                    this.RaisePropertyChanged("FilterOnEntityOfficeL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrimaryContact {
            get {
                return this.IsPrimaryContactField;
            }
            set {
                if ((this.IsPrimaryContactField.Equals(value) != true)) {
                    this.IsPrimaryContactField = value;
                    this.RaisePropertyChanged("IsPrimaryContact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SharedClientID {
            get {
                return this.SharedClientIDField;
            }
            set {
                if ((this.SharedClientIDField.Equals(value) != true)) {
                    this.SharedClientIDField = value;
                    this.RaisePropertyChanged("SharedClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SharedStaffGroupID {
            get {
                return this.SharedStaffGroupIDField;
            }
            set {
                if ((this.SharedStaffGroupIDField.Equals(value) != true)) {
                    this.SharedStaffGroupIDField = value;
                    this.RaisePropertyChanged("SharedStaffGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SharedStaffID {
            get {
                return this.SharedStaffIDField;
            }
            set {
                if ((this.SharedStaffIDField.Equals(value) != true)) {
                    this.SharedStaffIDField = value;
                    this.RaisePropertyChanged("SharedStaffID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StaffGroupID {
            get {
                return this.StaffGroupIDField;
            }
            set {
                if ((this.StaffGroupIDField.Equals(value) != true)) {
                    this.StaffGroupIDField = value;
                    this.RaisePropertyChanged("StaffGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StaffID {
            get {
                return this.StaffIDField;
            }
            set {
                if ((this.StaffIDField.Equals(value) != true)) {
                    this.StaffIDField = value;
                    this.RaisePropertyChanged("StaffID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseFilters {
            get {
                return this.UseFiltersField;
            }
            set {
                if ((this.UseFiltersField.Equals(value) != true)) {
                    this.UseFiltersField = value;
                    this.RaisePropertyChanged("UseFilters");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/Citadel.Clients.Entity")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.Individual))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MySecureZoneApp.Api.TyrusClientService.NonIndividual))]
    public partial class Client : MySecureZoneApp.Api.TyrusClientService.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ClientNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ClientStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short ClientTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CorrespondanceLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short CountryOfResidenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InceptionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ClientNumber {
            get {
                return this.ClientNumberField;
            }
            set {
                if ((this.ClientNumberField.Equals(value) != true)) {
                    this.ClientNumberField = value;
                    this.RaisePropertyChanged("ClientNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ClientStatus {
            get {
                return this.ClientStatusField;
            }
            set {
                if ((this.ClientStatusField.Equals(value) != true)) {
                    this.ClientStatusField = value;
                    this.RaisePropertyChanged("ClientStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short ClientType {
            get {
                return this.ClientTypeField;
            }
            set {
                if ((this.ClientTypeField.Equals(value) != true)) {
                    this.ClientTypeField = value;
                    this.RaisePropertyChanged("ClientType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CorrespondanceLanguage {
            get {
                return this.CorrespondanceLanguageField;
            }
            set {
                if ((this.CorrespondanceLanguageField.Equals(value) != true)) {
                    this.CorrespondanceLanguageField = value;
                    this.RaisePropertyChanged("CorrespondanceLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CountryOfResidence {
            get {
                return this.CountryOfResidenceField;
            }
            set {
                if ((this.CountryOfResidenceField.Equals(value) != true)) {
                    this.CountryOfResidenceField = value;
                    this.RaisePropertyChanged("CountryOfResidence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InceptionDate {
            get {
                return this.InceptionDateField;
            }
            set {
                if ((this.InceptionDateField.Equals(value) != true)) {
                    this.InceptionDateField = value;
                    this.RaisePropertyChanged("InceptionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Individual", Namespace="http://schemas.datacontract.org/2004/07/Citadel.Clients.Entity")]
    [System.SerializableAttribute()]
    public partial class Individual : MySecureZoneApp.Api.TyrusClientService.Client {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AmbassadorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BirthCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BirthDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirthPlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MySecureZoneApp.Api.TyrusClientService.BrainProfile BrainProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfDeathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short EmploymentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short HomeLanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAmbassadorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPEPPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReferableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaidenNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MaritalDateForAccrualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MaritalStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime MaritalStatusDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short NationalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PEPRevisionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short RaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuffixField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MySecureZoneApp.Api.TyrusClientService.Will WillField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AmbassadorType {
            get {
                return this.AmbassadorTypeField;
            }
            set {
                if ((this.AmbassadorTypeField.Equals(value) != true)) {
                    this.AmbassadorTypeField = value;
                    this.RaisePropertyChanged("AmbassadorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BirthCountry {
            get {
                return this.BirthCountryField;
            }
            set {
                if ((this.BirthCountryField.Equals(value) != true)) {
                    this.BirthCountryField = value;
                    this.RaisePropertyChanged("BirthCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BirthDate {
            get {
                return this.BirthDateField;
            }
            set {
                if ((this.BirthDateField.Equals(value) != true)) {
                    this.BirthDateField = value;
                    this.RaisePropertyChanged("BirthDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BirthPlace {
            get {
                return this.BirthPlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthPlaceField, value) != true)) {
                    this.BirthPlaceField = value;
                    this.RaisePropertyChanged("BirthPlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MySecureZoneApp.Api.TyrusClientService.BrainProfile BrainProfile {
            get {
                return this.BrainProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.BrainProfileField, value) != true)) {
                    this.BrainProfileField = value;
                    this.RaisePropertyChanged("BrainProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfDeath {
            get {
                return this.DateOfDeathField;
            }
            set {
                if ((this.DateOfDeathField.Equals(value) != true)) {
                    this.DateOfDeathField = value;
                    this.RaisePropertyChanged("DateOfDeath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short EmploymentStatus {
            get {
                return this.EmploymentStatusField;
            }
            set {
                if ((this.EmploymentStatusField.Equals(value) != true)) {
                    this.EmploymentStatusField = value;
                    this.RaisePropertyChanged("EmploymentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstNames {
            get {
                return this.FirstNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNamesField, value) != true)) {
                    this.FirstNamesField = value;
                    this.RaisePropertyChanged("FirstNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short HomeLanguage {
            get {
                return this.HomeLanguageField;
            }
            set {
                if ((this.HomeLanguageField.Equals(value) != true)) {
                    this.HomeLanguageField = value;
                    this.RaisePropertyChanged("HomeLanguage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAmbassador {
            get {
                return this.IsAmbassadorField;
            }
            set {
                if ((this.IsAmbassadorField.Equals(value) != true)) {
                    this.IsAmbassadorField = value;
                    this.RaisePropertyChanged("IsAmbassador");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPEPPerson {
            get {
                return this.IsPEPPersonField;
            }
            set {
                if ((this.IsPEPPersonField.Equals(value) != true)) {
                    this.IsPEPPersonField = value;
                    this.RaisePropertyChanged("IsPEPPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsReferable {
            get {
                return this.IsReferableField;
            }
            set {
                if ((this.IsReferableField.Equals(value) != true)) {
                    this.IsReferableField = value;
                    this.RaisePropertyChanged("IsReferable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaidenName {
            get {
                return this.MaidenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MaidenNameField, value) != true)) {
                    this.MaidenNameField = value;
                    this.RaisePropertyChanged("MaidenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MaritalDateForAccrual {
            get {
                return this.MaritalDateForAccrualField;
            }
            set {
                if ((this.MaritalDateForAccrualField.Equals(value) != true)) {
                    this.MaritalDateForAccrualField = value;
                    this.RaisePropertyChanged("MaritalDateForAccrual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MaritalStatus {
            get {
                return this.MaritalStatusField;
            }
            set {
                if ((this.MaritalStatusField.Equals(value) != true)) {
                    this.MaritalStatusField = value;
                    this.RaisePropertyChanged("MaritalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MaritalStatusDate {
            get {
                return this.MaritalStatusDateField;
            }
            set {
                if ((this.MaritalStatusDateField.Equals(value) != true)) {
                    this.MaritalStatusDateField = value;
                    this.RaisePropertyChanged("MaritalStatusDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Nationality {
            get {
                return this.NationalityField;
            }
            set {
                if ((this.NationalityField.Equals(value) != true)) {
                    this.NationalityField = value;
                    this.RaisePropertyChanged("Nationality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PEPRevisionDate {
            get {
                return this.PEPRevisionDateField;
            }
            set {
                if ((this.PEPRevisionDateField.Equals(value) != true)) {
                    this.PEPRevisionDateField = value;
                    this.RaisePropertyChanged("PEPRevisionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Race {
            get {
                return this.RaceField;
            }
            set {
                if ((this.RaceField.Equals(value) != true)) {
                    this.RaceField = value;
                    this.RaisePropertyChanged("Race");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suffix {
            get {
                return this.SuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SuffixField, value) != true)) {
                    this.SuffixField = value;
                    this.RaisePropertyChanged("Suffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Title {
            get {
                return this.TitleField;
            }
            set {
                if ((this.TitleField.Equals(value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MySecureZoneApp.Api.TyrusClientService.Will Will {
            get {
                return this.WillField;
            }
            set {
                if ((object.ReferenceEquals(this.WillField, value) != true)) {
                    this.WillField = value;
                    this.RaisePropertyChanged("Will");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NonIndividual", Namespace="http://schemas.datacontract.org/2004/07/Citadel.Clients.Entity")]
    [System.SerializableAttribute()]
    public partial class NonIndividual : MySecureZoneApp.Api.TyrusClientService.Client {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short AdministratorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short BeneficiariesDeterminedMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MySecureZoneApp.Api.TyrusClientService.Client ContactPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DeedContactClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FiduciaryCertifiedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FiduciaryReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short FiduciaryStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasLetterOfAuthorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasLetterOfWishesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCitadelATrusteeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short MasterOfHighCourtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MoreInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RSATradeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegistrationNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SalutationLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrustIsLocalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Administrator {
            get {
                return this.AdministratorField;
            }
            set {
                if ((this.AdministratorField.Equals(value) != true)) {
                    this.AdministratorField = value;
                    this.RaisePropertyChanged("Administrator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short BeneficiariesDeterminedMethod {
            get {
                return this.BeneficiariesDeterminedMethodField;
            }
            set {
                if ((this.BeneficiariesDeterminedMethodField.Equals(value) != true)) {
                    this.BeneficiariesDeterminedMethodField = value;
                    this.RaisePropertyChanged("BeneficiariesDeterminedMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MySecureZoneApp.Api.TyrusClientService.Client ContactPerson {
            get {
                return this.ContactPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPersonField, value) != true)) {
                    this.ContactPersonField = value;
                    this.RaisePropertyChanged("ContactPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DeedContactClientID {
            get {
                return this.DeedContactClientIDField;
            }
            set {
                if ((this.DeedContactClientIDField.Equals(value) != true)) {
                    this.DeedContactClientIDField = value;
                    this.RaisePropertyChanged("DeedContactClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FiduciaryCertifiedBy {
            get {
                return this.FiduciaryCertifiedByField;
            }
            set {
                if ((this.FiduciaryCertifiedByField.Equals(value) != true)) {
                    this.FiduciaryCertifiedByField = value;
                    this.RaisePropertyChanged("FiduciaryCertifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FiduciaryReason {
            get {
                return this.FiduciaryReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.FiduciaryReasonField, value) != true)) {
                    this.FiduciaryReasonField = value;
                    this.RaisePropertyChanged("FiduciaryReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FiduciaryStatus {
            get {
                return this.FiduciaryStatusField;
            }
            set {
                if ((this.FiduciaryStatusField.Equals(value) != true)) {
                    this.FiduciaryStatusField = value;
                    this.RaisePropertyChanged("FiduciaryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLetterOfAuthority {
            get {
                return this.HasLetterOfAuthorityField;
            }
            set {
                if ((this.HasLetterOfAuthorityField.Equals(value) != true)) {
                    this.HasLetterOfAuthorityField = value;
                    this.RaisePropertyChanged("HasLetterOfAuthority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasLetterOfWishes {
            get {
                return this.HasLetterOfWishesField;
            }
            set {
                if ((this.HasLetterOfWishesField.Equals(value) != true)) {
                    this.HasLetterOfWishesField = value;
                    this.RaisePropertyChanged("HasLetterOfWishes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCitadelATrustee {
            get {
                return this.IsCitadelATrusteeField;
            }
            set {
                if ((this.IsCitadelATrusteeField.Equals(value) != true)) {
                    this.IsCitadelATrusteeField = value;
                    this.RaisePropertyChanged("IsCitadelATrustee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MasterOfHighCourt {
            get {
                return this.MasterOfHighCourtField;
            }
            set {
                if ((this.MasterOfHighCourtField.Equals(value) != true)) {
                    this.MasterOfHighCourtField = value;
                    this.RaisePropertyChanged("MasterOfHighCourt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MoreInformation {
            get {
                return this.MoreInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.MoreInformationField, value) != true)) {
                    this.MoreInformationField = value;
                    this.RaisePropertyChanged("MoreInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RSATradeName {
            get {
                return this.RSATradeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RSATradeNameField, value) != true)) {
                    this.RSATradeNameField = value;
                    this.RaisePropertyChanged("RSATradeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegistrationNumber {
            get {
                return this.RegistrationNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RegistrationNumberField, value) != true)) {
                    this.RegistrationNumberField = value;
                    this.RaisePropertyChanged("RegistrationNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SalutationL {
            get {
                return this.SalutationLField;
            }
            set {
                if ((this.SalutationLField.Equals(value) != true)) {
                    this.SalutationLField = value;
                    this.RaisePropertyChanged("SalutationL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TrustIsLocal {
            get {
                return this.TrustIsLocalField;
            }
            set {
                if ((this.TrustIsLocalField.Equals(value) != true)) {
                    this.TrustIsLocalField = value;
                    this.RaisePropertyChanged("TrustIsLocal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/Citadel.Tyrus.Service")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TyrusClientService.IClientService")]
    public interface IClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetData", ReplyAction="http://tempuri.org/IClientService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetData", ReplyAction="http://tempuri.org/IClientService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetLookupValue", ReplyAction="http://tempuri.org/IClientService/GetLookupValueResponse")]
        string GetLookupValue(short LID, string lookupName, string columnName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetLookupValue", ReplyAction="http://tempuri.org/IClientService/GetLookupValueResponse")]
        System.Threading.Tasks.Task<string> GetLookupValueAsync(short LID, string lookupName, string columnName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClient", ReplyAction="http://tempuri.org/IClientService/GetClientResponse")]
        MySecureZoneApp.Api.TyrusClientService.Client GetClient(System.Guid partyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClient", ReplyAction="http://tempuri.org/IClientService/GetClientResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.Client> GetClientAsync(System.Guid partyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientName", ReplyAction="http://tempuri.org/IClientService/GetClientNameResponse")]
        string GetClientName(System.Guid partyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientName", ReplyAction="http://tempuri.org/IClientService/GetClientNameResponse")]
        System.Threading.Tasks.Task<string> GetClientNameAsync(System.Guid partyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IClientService/GetDataUsingDataContractResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType GetDataUsingDataContract(MySecureZoneApp.Api.TyrusClientService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IClientService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> GetDataUsingDataContractAsync(MySecureZoneApp.Api.TyrusClientService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SearchClients", ReplyAction="http://tempuri.org/IClientService/SearchClientsResponse")]
        MySecureZoneApp.Api.TyrusClientService.Client[] SearchClients(System.Nullable<int> loggedOnUser, System.Nullable<int> clientNumber, string surname, System.Nullable<int> partyCompanyL, System.Nullable<int> partyOfficeL, string telNumber, string emailAddress, string idNumber, bool isDeleted, string contractNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SearchClients", ReplyAction="http://tempuri.org/IClientService/SearchClientsResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.Client[]> SearchClientsAsync(System.Nullable<int> loggedOnUser, System.Nullable<int> clientNumber, string surname, System.Nullable<int> partyCompanyL, System.Nullable<int> partyOfficeL, string telNumber, string emailAddress, string idNumber, bool isDeleted, string contractNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Search", ReplyAction="http://tempuri.org/IClientService/SearchResponse")]
        string Search(string clientNumbers, string registrationNumber, string firstname, string surname, System.Nullable<bool> isDeleted, string phoneNumber, string email, string company, string entityGroups, string idNumber, string contractNumber, System.Nullable<int> loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/Search", ReplyAction="http://tempuri.org/IClientService/SearchResponse")]
        System.Threading.Tasks.Task<string> SearchAsync(string clientNumbers, string registrationNumber, string firstname, string surname, System.Nullable<bool> isDeleted, string phoneNumber, string email, string company, string entityGroups, string idNumber, string contractNumber, System.Nullable<int> loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SearchByKeywords", ReplyAction="http://tempuri.org/IClientService/SearchByKeywordsResponse")]
        string SearchByKeywords(int loggedInUserID, bool isDeleted, string keywords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SearchByKeywords", ReplyAction="http://tempuri.org/IClientService/SearchByKeywordsResponse")]
        System.Threading.Tasks.Task<string> SearchByKeywordsAsync(int loggedInUserID, bool isDeleted, string keywords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ExternalRelationshipSummaryDetails", ReplyAction="http://tempuri.org/IClientService/ExternalRelationshipSummaryDetailsResponse")]
        System.Data.DataSet ExternalRelationshipSummaryDetails(System.Guid PartyID, bool current, bool includeEx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ExternalRelationshipSummaryDetails", ReplyAction="http://tempuri.org/IClientService/ExternalRelationshipSummaryDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ExternalRelationshipSummaryDetailsAsync(System.Guid PartyID, bool current, bool includeEx);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteExternalRelationship", ReplyAction="http://tempuri.org/IClientService/DeleteExternalRelationshipResponse")]
        bool DeleteExternalRelationship(System.Guid RelationshipID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteExternalRelationship", ReplyAction="http://tempuri.org/IClientService/DeleteExternalRelationshipResponse")]
        System.Threading.Tasks.Task<bool> DeleteExternalRelationshipAsync(System.Guid RelationshipID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveExternalRelationship", ReplyAction="http://tempuri.org/IClientService/SaveExternalRelationshipResponse")]
        MySecureZoneApp.Api.TyrusClientService.SaveExternalRelationshipResponse SaveExternalRelationship(MySecureZoneApp.Api.TyrusClientService.SaveExternalRelationshipRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveExternalRelationship", ReplyAction="http://tempuri.org/IClientService/SaveExternalRelationshipResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.SaveExternalRelationshipResponse> SaveExternalRelationshipAsync(MySecureZoneApp.Api.TyrusClientService.SaveExternalRelationshipRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetComplianceTypes", ReplyAction="http://tempuri.org/IClientService/GetComplianceTypesResponse")]
        MySecureZoneApp.Api.TyrusClientService.ComplianceType[] GetComplianceTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetComplianceTypes", ReplyAction="http://tempuri.org/IClientService/GetComplianceTypesResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.ComplianceType[]> GetComplianceTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ComplianceDetail", ReplyAction="http://tempuri.org/IClientService/ComplianceDetailResponse")]
        System.Data.DataSet ComplianceDetail(System.Guid partyID, string detailProcedure);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ComplianceDetail", ReplyAction="http://tempuri.org/IClientService/ComplianceDetailResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ComplianceDetailAsync(System.Guid partyID, string detailProcedure);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetStaffNames", ReplyAction="http://tempuri.org/IClientService/GetStaffNamesResponse")]
        System.Data.DataSet GetStaffNames(System.Nullable<short> StaffGroupL, System.Nullable<short> StaffLevelL, System.Nullable<short> StaffPositionL, System.Nullable<short> StaffRelationshipL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetStaffNames", ReplyAction="http://tempuri.org/IClientService/GetStaffNamesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStaffNamesAsync(System.Nullable<short> StaffGroupL, System.Nullable<short> StaffLevelL, System.Nullable<short> StaffPositionL, System.Nullable<short> StaffRelationshipL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetPositionFilteredStaffList", ReplyAction="http://tempuri.org/IClientService/GetPositionFilteredStaffListResponse")]
        System.Data.DataSet GetPositionFilteredStaffList(string keyRolePositionList, string companyNameList, string accountTypeList, string excludedKeyRolePositionList, bool includeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetPositionFilteredStaffList", ReplyAction="http://tempuri.org/IClientService/GetPositionFilteredStaffListResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPositionFilteredStaffListAsync(string keyRolePositionList, string companyNameList, string accountTypeList, string excludedKeyRolePositionList, bool includeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveNaturalPerson", ReplyAction="http://tempuri.org/IClientService/SaveNaturalPersonResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType SaveNaturalPerson(
                    System.Guid PartyID, 
                    string Firstname, 
                    string Surname, 
                    string Initials, 
                    short NationalityL, 
                    short GenderL, 
                    short TitleL, 
                    short RaceL, 
                    string ContactNumber, 
                    string IDNumber, 
                    string EmailAddress, 
                    short CorrespondanceLanguageL, 
                    System.DateTime DateOfBirth, 
                    System.DateTime DateOfDeath, 
                    System.Guid ReponsiblePerson, 
                    int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveNaturalPerson", ReplyAction="http://tempuri.org/IClientService/SaveNaturalPersonResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveNaturalPersonAsync(
                    System.Guid PartyID, 
                    string Firstname, 
                    string Surname, 
                    string Initials, 
                    short NationalityL, 
                    short GenderL, 
                    short TitleL, 
                    short RaceL, 
                    string ContactNumber, 
                    string IDNumber, 
                    string EmailAddress, 
                    short CorrespondanceLanguageL, 
                    System.DateTime DateOfBirth, 
                    System.DateTime DateOfDeath, 
                    System.Guid ReponsiblePerson, 
                    int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetNaturalPersonDetails", ReplyAction="http://tempuri.org/IClientService/GetNaturalPersonDetailsResponse")]
        MySecureZoneApp.Api.TyrusClientService.Individual GetNaturalPersonDetails(System.Guid ID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetNaturalPersonDetails", ReplyAction="http://tempuri.org/IClientService/GetNaturalPersonDetailsResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.Individual> GetNaturalPersonDetailsAsync(System.Guid ID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveLegalEntity", ReplyAction="http://tempuri.org/IClientService/SaveLegalEntityResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType SaveLegalEntity(System.Guid PartyID, string RSATradeName, short SubTypeL, short MasterOfHighCourtL, string ContactNumber, string EmailAddress, short TrustAdministrator, string RegistrationNumber, short CountryOfResidenceL, System.Guid ReponsiblePerson, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveLegalEntity", ReplyAction="http://tempuri.org/IClientService/SaveLegalEntityResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveLegalEntityAsync(System.Guid PartyID, string RSATradeName, short SubTypeL, short MasterOfHighCourtL, string ContactNumber, string EmailAddress, short TrustAdministrator, string RegistrationNumber, short CountryOfResidenceL, System.Guid ReponsiblePerson, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetLegalEntityDetails", ReplyAction="http://tempuri.org/IClientService/GetLegalEntityDetailsResponse")]
        MySecureZoneApp.Api.TyrusClientService.NonIndividual GetLegalEntityDetails(System.Guid ID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetLegalEntityDetails", ReplyAction="http://tempuri.org/IClientService/GetLegalEntityDetailsResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.NonIndividual> GetLegalEntityDetailsAsync(System.Guid ID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientIdentification", ReplyAction="http://tempuri.org/IClientService/SaveClientIdentificationResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientIdentification(System.Guid PartyID, System.Guid IdentificationID, short CountryOfIssueL, short IdentificationTypeL, bool DefaultForType, string IDNo, System.DateTime DateIssued, System.DateTime ExpiryDate, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientIdentification", ReplyAction="http://tempuri.org/IClientService/SaveClientIdentificationResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientIdentificationAsync(System.Guid PartyID, System.Guid IdentificationID, short CountryOfIssueL, short IdentificationTypeL, bool DefaultForType, string IDNo, System.DateTime DateIssued, System.DateTime ExpiryDate, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SAIDNumberControlDigitValid", ReplyAction="http://tempuri.org/IClientService/SAIDNumberControlDigitValidResponse")]
        bool SAIDNumberControlDigitValid(System.Guid PartyId, string IDNumber, short gender, System.DateTime dateOfBirth, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SAIDNumberControlDigitValid", ReplyAction="http://tempuri.org/IClientService/SAIDNumberControlDigitValidResponse")]
        System.Threading.Tasks.Task<bool> SAIDNumberControlDigitValidAsync(System.Guid PartyId, string IDNumber, short gender, System.DateTime dateOfBirth, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientIdentificationDetails", ReplyAction="http://tempuri.org/IClientService/GetClientIdentificationDetailsResponse")]
        System.Data.DataSet GetClientIdentificationDetails(System.Guid PartyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientIdentificationDetails", ReplyAction="http://tempuri.org/IClientService/GetClientIdentificationDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetClientIdentificationDetailsAsync(System.Guid PartyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientIdentificationDetail", ReplyAction="http://tempuri.org/IClientService/DeleteClientIdentificationDetailResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientIdentificationDetail(System.Guid PartyIdentificationID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientIdentificationDetail", ReplyAction="http://tempuri.org/IClientService/DeleteClientIdentificationDetailResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientIdentificationDetailAsync(System.Guid PartyIdentificationID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientTaxDetails", ReplyAction="http://tempuri.org/IClientService/SaveClientTaxDetailsResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientTaxDetails(System.Guid PartyID, System.Guid TaxRegistrationID, short TaxCountryL, short TaxRegistrationTyppeL, string TaxNo, short TaxOfficeL, bool ProvisionalTaxPayer, string InstitiutionClientNo, bool TaxPurposesResident, short ReasonNotRegisteredL, string Comments, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientTaxDetails", ReplyAction="http://tempuri.org/IClientService/SaveClientTaxDetailsResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientTaxDetailsAsync(System.Guid PartyID, System.Guid TaxRegistrationID, short TaxCountryL, short TaxRegistrationTyppeL, string TaxNo, short TaxOfficeL, bool ProvisionalTaxPayer, string InstitiutionClientNo, bool TaxPurposesResident, short ReasonNotRegisteredL, string Comments, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientTaxDetails", ReplyAction="http://tempuri.org/IClientService/GetClientTaxDetailsResponse")]
        System.Data.DataSet GetClientTaxDetails(System.Guid ID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientTaxDetails", ReplyAction="http://tempuri.org/IClientService/GetClientTaxDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetClientTaxDetailsAsync(System.Guid ID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientTaxDetails", ReplyAction="http://tempuri.org/IClientService/DeleteClientTaxDetailsResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientTaxDetails(System.Guid TaxRegistrationID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientTaxDetails", ReplyAction="http://tempuri.org/IClientService/DeleteClientTaxDetailsResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientTaxDetailsAsync(System.Guid TaxRegistrationID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientBankingDetails", ReplyAction="http://tempuri.org/IClientService/SaveClientBankingDetailsResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientBankingDetails(
                    System.Guid PartyID, 
                    System.Guid PartyBankID, 
                    string AccountHolder, 
                    string SignRights, 
                    short CountryL, 
                    short AccountTypeL, 
                    short BankL, 
                    string BranchName, 
                    string BranchNumber, 
                    string BranchTelNo, 
                    bool ActiveAccount, 
                    string AccountNo, 
                    string SWIFTNo, 
                    string IBANNo, 
                    string Comments, 
                    int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientBankingDetails", ReplyAction="http://tempuri.org/IClientService/SaveClientBankingDetailsResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientBankingDetailsAsync(
                    System.Guid PartyID, 
                    System.Guid PartyBankID, 
                    string AccountHolder, 
                    string SignRights, 
                    short CountryL, 
                    short AccountTypeL, 
                    short BankL, 
                    string BranchName, 
                    string BranchNumber, 
                    string BranchTelNo, 
                    bool ActiveAccount, 
                    string AccountNo, 
                    string SWIFTNo, 
                    string IBANNo, 
                    string Comments, 
                    int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientBankingDetails", ReplyAction="http://tempuri.org/IClientService/GetClientBankingDetailsResponse")]
        System.Data.DataSet GetClientBankingDetails(System.Guid PartyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientBankingDetails", ReplyAction="http://tempuri.org/IClientService/GetClientBankingDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetClientBankingDetailsAsync(System.Guid PartyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientBankingDetail", ReplyAction="http://tempuri.org/IClientService/DeleteClientBankingDetailResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientBankingDetail(System.Guid PartyBankID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientBankingDetail", ReplyAction="http://tempuri.org/IClientService/DeleteClientBankingDetailResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientBankingDetailAsync(System.Guid PartyBankID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientAddressDetails", ReplyAction="http://tempuri.org/IClientService/SaveClientAddressDetailsResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientAddressDetails(System.Guid PartyID, System.Guid PartyAddressID, short AddressTypeL, short PostalAddressTypel, short PostalAddressServiceTypeL, string UnitNumber, string ComplexName, string StreetNumber, string StreetName, string Suburb, short ProvinceL, short CountryL, string AreaCode, string Comments, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientAddressDetails", ReplyAction="http://tempuri.org/IClientService/SaveClientAddressDetailsResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientAddressDetailsAsync(System.Guid PartyID, System.Guid PartyAddressID, short AddressTypeL, short PostalAddressTypel, short PostalAddressServiceTypeL, string UnitNumber, string ComplexName, string StreetNumber, string StreetName, string Suburb, short ProvinceL, short CountryL, string AreaCode, string Comments, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientAddressDetails", ReplyAction="http://tempuri.org/IClientService/GetClientAddressDetailsResponse")]
        System.Data.DataSet GetClientAddressDetails(System.Guid PartyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientAddressDetails", ReplyAction="http://tempuri.org/IClientService/GetClientAddressDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetClientAddressDetailsAsync(System.Guid PartyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientAddressDetails", ReplyAction="http://tempuri.org/IClientService/DeleteClientAddressDetailsResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientAddressDetails(System.Guid PartyAddressID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientAddressDetails", ReplyAction="http://tempuri.org/IClientService/DeleteClientAddressDetailsResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientAddressDetailsAsync(System.Guid PartyAddressID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientEmailDetails", ReplyAction="http://tempuri.org/IClientService/SaveClientEmailDetailsResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientEmailDetails(System.Guid PartyID, System.Guid PartyEmailID, string Address, short AddressType, bool IsPreferred, string Comments, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientEmailDetails", ReplyAction="http://tempuri.org/IClientService/SaveClientEmailDetailsResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientEmailDetailsAsync(System.Guid PartyID, System.Guid PartyEmailID, string Address, short AddressType, bool IsPreferred, string Comments, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientEmailDetails", ReplyAction="http://tempuri.org/IClientService/GetClientEmailDetailsResponse")]
        System.Data.DataSet GetClientEmailDetails(System.Guid PartyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientEmailDetails", ReplyAction="http://tempuri.org/IClientService/GetClientEmailDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetClientEmailDetailsAsync(System.Guid PartyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientEmailDetails", ReplyAction="http://tempuri.org/IClientService/DeleteClientEmailDetailsResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientEmailDetails(System.Guid PartyEmailID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientEmailDetails", ReplyAction="http://tempuri.org/IClientService/DeleteClientEmailDetailsResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientEmailDetailsAsync(System.Guid PartyEmailID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientPhoneDetails", ReplyAction="http://tempuri.org/IClientService/SaveClientPhoneDetailsResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientPhoneDetails(System.Guid PartyID, System.Guid PartyTelephoneID, short TypeL, string AreaCode, string Comments, short CountryL, bool IsPreferred, string Number, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientPhoneDetails", ReplyAction="http://tempuri.org/IClientService/SaveClientPhoneDetailsResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientPhoneDetailsAsync(System.Guid PartyID, System.Guid PartyTelephoneID, short TypeL, string AreaCode, string Comments, short CountryL, bool IsPreferred, string Number, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientPhoneDetails", ReplyAction="http://tempuri.org/IClientService/GetClientPhoneDetailsResponse")]
        System.Data.DataSet GetClientPhoneDetails(System.Guid PartyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientPhoneDetails", ReplyAction="http://tempuri.org/IClientService/GetClientPhoneDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetClientPhoneDetailsAsync(System.Guid PartyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientPhoneDetails", ReplyAction="http://tempuri.org/IClientService/DeleteClientPhoneDetailsResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientPhoneDetails(System.Guid PartyTelephoneID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientPhoneDetails", ReplyAction="http://tempuri.org/IClientService/DeleteClientPhoneDetailsResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientPhoneDetailsAsync(System.Guid PartyTelephoneID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientNoteDetails", ReplyAction="http://tempuri.org/IClientService/SaveClientNoteDetailsResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientNoteDetails(System.Guid PartyID, System.Guid PartyNotesID, short CategoryL, string Description, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveClientNoteDetails", ReplyAction="http://tempuri.org/IClientService/SaveClientNoteDetailsResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientNoteDetailsAsync(System.Guid PartyID, System.Guid PartyNotesID, short CategoryL, string Description, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientNoteDetails", ReplyAction="http://tempuri.org/IClientService/GetClientNoteDetailsResponse")]
        System.Data.DataSet GetClientNoteDetails(System.Guid PartyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetClientNoteDetails", ReplyAction="http://tempuri.org/IClientService/GetClientNoteDetailsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetClientNoteDetailsAsync(System.Guid PartyID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientNoteDetail", ReplyAction="http://tempuri.org/IClientService/DeleteClientNoteDetailResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientNoteDetail(System.Guid PartyNotesID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/DeleteClientNoteDetail", ReplyAction="http://tempuri.org/IClientService/DeleteClientNoteDetailResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientNoteDetailAsync(System.Guid PartyNotesID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetByRegistrationNo", ReplyAction="http://tempuri.org/IClientService/GetByRegistrationNoResponse")]
        System.Data.DataSet GetByRegistrationNo(string RegistrationNo, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetByRegistrationNo", ReplyAction="http://tempuri.org/IClientService/GetByRegistrationNoResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetByRegistrationNoAsync(string RegistrationNo, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetStaffByKeyRole", ReplyAction="http://tempuri.org/IClientService/GetStaffByKeyRoleResponse")]
        System.Data.DataSet GetStaffByKeyRole(System.Nullable<short> KeyRoleL, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetStaffByKeyRole", ReplyAction="http://tempuri.org/IClientService/GetStaffByKeyRoleResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetStaffByKeyRoleAsync(System.Nullable<short> KeyRoleL, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEntitySharingSummary", ReplyAction="http://tempuri.org/IClientService/GetEntitySharingSummaryResponse")]
        System.Data.DataSet GetEntitySharingSummary(System.Guid clientID, bool showDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEntitySharingSummary", ReplyAction="http://tempuri.org/IClientService/GetEntitySharingSummaryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEntitySharingSummaryAsync(System.Guid clientID, bool showDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetActiveStaffByClient", ReplyAction="http://tempuri.org/IClientService/GetActiveStaffByClientResponse")]
        System.Data.DataSet GetActiveStaffByClient(System.Guid PartyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetActiveStaffByClient", ReplyAction="http://tempuri.org/IClientService/GetActiveStaffByClientResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetActiveStaffByClientAsync(System.Guid PartyID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/CheckUserControlPermission", ReplyAction="http://tempuri.org/IClientService/CheckUserControlPermissionResponse")]
        MySecureZoneApp.Api.TyrusClientService.CompositeType CheckUserControlPermission(short controlPermission, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/CheckUserControlPermission", ReplyAction="http://tempuri.org/IClientService/CheckUserControlPermissionResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> CheckUserControlPermissionAsync(short controlPermission, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEntityShareSummary", ReplyAction="http://tempuri.org/IClientService/GetEntityShareSummaryResponse")]
        System.Data.DataSet GetEntityShareSummary(System.Guid clientID, bool showDeleted, System.DateTime viewDate, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEntityShareSummary", ReplyAction="http://tempuri.org/IClientService/GetEntityShareSummaryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEntityShareSummaryAsync(System.Guid clientID, bool showDeleted, System.DateTime viewDate, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetStaffEntitySharing", ReplyAction="http://tempuri.org/IClientService/GetStaffEntitySharingResponse")]
        MySecureZoneApp.Api.TyrusClientService.StaffEntitySharing GetStaffEntitySharing(System.Guid entitySharingID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetStaffEntitySharing", ReplyAction="http://tempuri.org/IClientService/GetStaffEntitySharingResponse")]
        System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.StaffEntitySharing> GetStaffEntitySharingAsync(System.Guid entitySharingID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEntitySharingHistorySummary", ReplyAction="http://tempuri.org/IClientService/GetEntitySharingHistorySummaryResponse")]
        System.Data.DataSet GetEntitySharingHistorySummary(System.Guid clientID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/GetEntitySharingHistorySummary", ReplyAction="http://tempuri.org/IClientService/GetEntitySharingHistorySummaryResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetEntitySharingHistorySummaryAsync(System.Guid clientID, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveStaffEntitySharing", ReplyAction="http://tempuri.org/IClientService/SaveStaffEntitySharingResponse")]
        bool SaveStaffEntitySharing(MySecureZoneApp.Api.TyrusClientService.StaffEntitySharing staffEntitySharing, int loggedInUserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/SaveStaffEntitySharing", ReplyAction="http://tempuri.org/IClientService/SaveStaffEntitySharingResponse")]
        System.Threading.Tasks.Task<bool> SaveStaffEntitySharingAsync(MySecureZoneApp.Api.TyrusClientService.StaffEntitySharing staffEntitySharing, int loggedInUserID);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveExternalRelationship", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveExternalRelationshipRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Guid partyID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Guid relationshipID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.Guid relatedID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public short type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public short relatedType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public decimal controllingPercentage;
        
        public SaveExternalRelationshipRequest() {
        }
        
        public SaveExternalRelationshipRequest(System.Guid partyID, System.Guid relationshipID, System.Guid relatedID, short type, short relatedType, decimal controllingPercentage) {
            this.partyID = partyID;
            this.relationshipID = relationshipID;
            this.relatedID = relatedID;
            this.type = type;
            this.relatedType = relatedType;
            this.controllingPercentage = controllingPercentage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SaveExternalRelationshipResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SaveExternalRelationshipResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SaveExternalRelationshipResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Guid resultRelationshipID;
        
        public SaveExternalRelationshipResponse() {
        }
        
        public SaveExternalRelationshipResponse(bool SaveExternalRelationshipResult, System.Guid resultRelationshipID) {
            this.SaveExternalRelationshipResult = SaveExternalRelationshipResult;
            this.resultRelationshipID = resultRelationshipID;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientServiceChannel : MySecureZoneApp.Api.TyrusClientService.IClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientServiceClient : System.ServiceModel.ClientBase<MySecureZoneApp.Api.TyrusClientService.IClientService>, MySecureZoneApp.Api.TyrusClientService.IClientService {
        
        public ClientServiceClient() {
        }
        
        public ClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public string GetLookupValue(short LID, string lookupName, string columnName) {
            return base.Channel.GetLookupValue(LID, lookupName, columnName);
        }
        
        public System.Threading.Tasks.Task<string> GetLookupValueAsync(short LID, string lookupName, string columnName) {
            return base.Channel.GetLookupValueAsync(LID, lookupName, columnName);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.Client GetClient(System.Guid partyID, int loggedInUserID) {
            return base.Channel.GetClient(partyID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.Client> GetClientAsync(System.Guid partyID, int loggedInUserID) {
            return base.Channel.GetClientAsync(partyID, loggedInUserID);
        }
        
        public string GetClientName(System.Guid partyID, int loggedInUserID) {
            return base.Channel.GetClientName(partyID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<string> GetClientNameAsync(System.Guid partyID, int loggedInUserID) {
            return base.Channel.GetClientNameAsync(partyID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType GetDataUsingDataContract(MySecureZoneApp.Api.TyrusClientService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> GetDataUsingDataContractAsync(MySecureZoneApp.Api.TyrusClientService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.Client[] SearchClients(System.Nullable<int> loggedOnUser, System.Nullable<int> clientNumber, string surname, System.Nullable<int> partyCompanyL, System.Nullable<int> partyOfficeL, string telNumber, string emailAddress, string idNumber, bool isDeleted, string contractNumber) {
            return base.Channel.SearchClients(loggedOnUser, clientNumber, surname, partyCompanyL, partyOfficeL, telNumber, emailAddress, idNumber, isDeleted, contractNumber);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.Client[]> SearchClientsAsync(System.Nullable<int> loggedOnUser, System.Nullable<int> clientNumber, string surname, System.Nullable<int> partyCompanyL, System.Nullable<int> partyOfficeL, string telNumber, string emailAddress, string idNumber, bool isDeleted, string contractNumber) {
            return base.Channel.SearchClientsAsync(loggedOnUser, clientNumber, surname, partyCompanyL, partyOfficeL, telNumber, emailAddress, idNumber, isDeleted, contractNumber);
        }
        
        public string Search(string clientNumbers, string registrationNumber, string firstname, string surname, System.Nullable<bool> isDeleted, string phoneNumber, string email, string company, string entityGroups, string idNumber, string contractNumber, System.Nullable<int> loggedInUserID) {
            return base.Channel.Search(clientNumbers, registrationNumber, firstname, surname, isDeleted, phoneNumber, email, company, entityGroups, idNumber, contractNumber, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<string> SearchAsync(string clientNumbers, string registrationNumber, string firstname, string surname, System.Nullable<bool> isDeleted, string phoneNumber, string email, string company, string entityGroups, string idNumber, string contractNumber, System.Nullable<int> loggedInUserID) {
            return base.Channel.SearchAsync(clientNumbers, registrationNumber, firstname, surname, isDeleted, phoneNumber, email, company, entityGroups, idNumber, contractNumber, loggedInUserID);
        }
        
        public string SearchByKeywords(int loggedInUserID, bool isDeleted, string keywords) {
            return base.Channel.SearchByKeywords(loggedInUserID, isDeleted, keywords);
        }
        
        public System.Threading.Tasks.Task<string> SearchByKeywordsAsync(int loggedInUserID, bool isDeleted, string keywords) {
            return base.Channel.SearchByKeywordsAsync(loggedInUserID, isDeleted, keywords);
        }
        
        public System.Data.DataSet ExternalRelationshipSummaryDetails(System.Guid PartyID, bool current, bool includeEx) {
            return base.Channel.ExternalRelationshipSummaryDetails(PartyID, current, includeEx);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ExternalRelationshipSummaryDetailsAsync(System.Guid PartyID, bool current, bool includeEx) {
            return base.Channel.ExternalRelationshipSummaryDetailsAsync(PartyID, current, includeEx);
        }
        
        public bool DeleteExternalRelationship(System.Guid RelationshipID) {
            return base.Channel.DeleteExternalRelationship(RelationshipID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteExternalRelationshipAsync(System.Guid RelationshipID) {
            return base.Channel.DeleteExternalRelationshipAsync(RelationshipID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MySecureZoneApp.Api.TyrusClientService.SaveExternalRelationshipResponse MySecureZoneApp.Api.TyrusClientService.IClientService.SaveExternalRelationship(MySecureZoneApp.Api.TyrusClientService.SaveExternalRelationshipRequest request) {
            return base.Channel.SaveExternalRelationship(request);
        }
        
        public bool SaveExternalRelationship(System.Guid partyID, System.Guid relationshipID, System.Guid relatedID, short type, short relatedType, decimal controllingPercentage, out System.Guid resultRelationshipID) {
            MySecureZoneApp.Api.TyrusClientService.SaveExternalRelationshipRequest inValue = new MySecureZoneApp.Api.TyrusClientService.SaveExternalRelationshipRequest();
            inValue.partyID = partyID;
            inValue.relationshipID = relationshipID;
            inValue.relatedID = relatedID;
            inValue.type = type;
            inValue.relatedType = relatedType;
            inValue.controllingPercentage = controllingPercentage;
            MySecureZoneApp.Api.TyrusClientService.SaveExternalRelationshipResponse retVal = ((MySecureZoneApp.Api.TyrusClientService.IClientService)(this)).SaveExternalRelationship(inValue);
            resultRelationshipID = retVal.resultRelationshipID;
            return retVal.SaveExternalRelationshipResult;
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.SaveExternalRelationshipResponse> SaveExternalRelationshipAsync(MySecureZoneApp.Api.TyrusClientService.SaveExternalRelationshipRequest request) {
            return base.Channel.SaveExternalRelationshipAsync(request);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.ComplianceType[] GetComplianceTypes() {
            return base.Channel.GetComplianceTypes();
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.ComplianceType[]> GetComplianceTypesAsync() {
            return base.Channel.GetComplianceTypesAsync();
        }
        
        public System.Data.DataSet ComplianceDetail(System.Guid partyID, string detailProcedure) {
            return base.Channel.ComplianceDetail(partyID, detailProcedure);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ComplianceDetailAsync(System.Guid partyID, string detailProcedure) {
            return base.Channel.ComplianceDetailAsync(partyID, detailProcedure);
        }
        
        public System.Data.DataSet GetStaffNames(System.Nullable<short> StaffGroupL, System.Nullable<short> StaffLevelL, System.Nullable<short> StaffPositionL, System.Nullable<short> StaffRelationshipL) {
            return base.Channel.GetStaffNames(StaffGroupL, StaffLevelL, StaffPositionL, StaffRelationshipL);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStaffNamesAsync(System.Nullable<short> StaffGroupL, System.Nullable<short> StaffLevelL, System.Nullable<short> StaffPositionL, System.Nullable<short> StaffRelationshipL) {
            return base.Channel.GetStaffNamesAsync(StaffGroupL, StaffLevelL, StaffPositionL, StaffRelationshipL);
        }
        
        public System.Data.DataSet GetPositionFilteredStaffList(string keyRolePositionList, string companyNameList, string accountTypeList, string excludedKeyRolePositionList, bool includeDeleted) {
            return base.Channel.GetPositionFilteredStaffList(keyRolePositionList, companyNameList, accountTypeList, excludedKeyRolePositionList, includeDeleted);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPositionFilteredStaffListAsync(string keyRolePositionList, string companyNameList, string accountTypeList, string excludedKeyRolePositionList, bool includeDeleted) {
            return base.Channel.GetPositionFilteredStaffListAsync(keyRolePositionList, companyNameList, accountTypeList, excludedKeyRolePositionList, includeDeleted);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType SaveNaturalPerson(
                    System.Guid PartyID, 
                    string Firstname, 
                    string Surname, 
                    string Initials, 
                    short NationalityL, 
                    short GenderL, 
                    short TitleL, 
                    short RaceL, 
                    string ContactNumber, 
                    string IDNumber, 
                    string EmailAddress, 
                    short CorrespondanceLanguageL, 
                    System.DateTime DateOfBirth, 
                    System.DateTime DateOfDeath, 
                    System.Guid ReponsiblePerson, 
                    int loggedInUserID) {
            return base.Channel.SaveNaturalPerson(PartyID, Firstname, Surname, Initials, NationalityL, GenderL, TitleL, RaceL, ContactNumber, IDNumber, EmailAddress, CorrespondanceLanguageL, DateOfBirth, DateOfDeath, ReponsiblePerson, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveNaturalPersonAsync(
                    System.Guid PartyID, 
                    string Firstname, 
                    string Surname, 
                    string Initials, 
                    short NationalityL, 
                    short GenderL, 
                    short TitleL, 
                    short RaceL, 
                    string ContactNumber, 
                    string IDNumber, 
                    string EmailAddress, 
                    short CorrespondanceLanguageL, 
                    System.DateTime DateOfBirth, 
                    System.DateTime DateOfDeath, 
                    System.Guid ReponsiblePerson, 
                    int loggedInUserID) {
            return base.Channel.SaveNaturalPersonAsync(PartyID, Firstname, Surname, Initials, NationalityL, GenderL, TitleL, RaceL, ContactNumber, IDNumber, EmailAddress, CorrespondanceLanguageL, DateOfBirth, DateOfDeath, ReponsiblePerson, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.Individual GetNaturalPersonDetails(System.Guid ID, int loggedInUserID) {
            return base.Channel.GetNaturalPersonDetails(ID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.Individual> GetNaturalPersonDetailsAsync(System.Guid ID, int loggedInUserID) {
            return base.Channel.GetNaturalPersonDetailsAsync(ID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType SaveLegalEntity(System.Guid PartyID, string RSATradeName, short SubTypeL, short MasterOfHighCourtL, string ContactNumber, string EmailAddress, short TrustAdministrator, string RegistrationNumber, short CountryOfResidenceL, System.Guid ReponsiblePerson, int loggedInUserID) {
            return base.Channel.SaveLegalEntity(PartyID, RSATradeName, SubTypeL, MasterOfHighCourtL, ContactNumber, EmailAddress, TrustAdministrator, RegistrationNumber, CountryOfResidenceL, ReponsiblePerson, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveLegalEntityAsync(System.Guid PartyID, string RSATradeName, short SubTypeL, short MasterOfHighCourtL, string ContactNumber, string EmailAddress, short TrustAdministrator, string RegistrationNumber, short CountryOfResidenceL, System.Guid ReponsiblePerson, int loggedInUserID) {
            return base.Channel.SaveLegalEntityAsync(PartyID, RSATradeName, SubTypeL, MasterOfHighCourtL, ContactNumber, EmailAddress, TrustAdministrator, RegistrationNumber, CountryOfResidenceL, ReponsiblePerson, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.NonIndividual GetLegalEntityDetails(System.Guid ID, int loggedInUserID) {
            return base.Channel.GetLegalEntityDetails(ID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.NonIndividual> GetLegalEntityDetailsAsync(System.Guid ID, int loggedInUserID) {
            return base.Channel.GetLegalEntityDetailsAsync(ID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientIdentification(System.Guid PartyID, System.Guid IdentificationID, short CountryOfIssueL, short IdentificationTypeL, bool DefaultForType, string IDNo, System.DateTime DateIssued, System.DateTime ExpiryDate, int loggedInUserID) {
            return base.Channel.SaveClientIdentification(PartyID, IdentificationID, CountryOfIssueL, IdentificationTypeL, DefaultForType, IDNo, DateIssued, ExpiryDate, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientIdentificationAsync(System.Guid PartyID, System.Guid IdentificationID, short CountryOfIssueL, short IdentificationTypeL, bool DefaultForType, string IDNo, System.DateTime DateIssued, System.DateTime ExpiryDate, int loggedInUserID) {
            return base.Channel.SaveClientIdentificationAsync(PartyID, IdentificationID, CountryOfIssueL, IdentificationTypeL, DefaultForType, IDNo, DateIssued, ExpiryDate, loggedInUserID);
        }
        
        public bool SAIDNumberControlDigitValid(System.Guid PartyId, string IDNumber, short gender, System.DateTime dateOfBirth, int loggedInUserID) {
            return base.Channel.SAIDNumberControlDigitValid(PartyId, IDNumber, gender, dateOfBirth, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<bool> SAIDNumberControlDigitValidAsync(System.Guid PartyId, string IDNumber, short gender, System.DateTime dateOfBirth, int loggedInUserID) {
            return base.Channel.SAIDNumberControlDigitValidAsync(PartyId, IDNumber, gender, dateOfBirth, loggedInUserID);
        }
        
        public System.Data.DataSet GetClientIdentificationDetails(System.Guid PartyID, int loggedInUserID) {
            return base.Channel.GetClientIdentificationDetails(PartyID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetClientIdentificationDetailsAsync(System.Guid PartyID, int loggedInUserID) {
            return base.Channel.GetClientIdentificationDetailsAsync(PartyID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientIdentificationDetail(System.Guid PartyIdentificationID, int loggedInUserID) {
            return base.Channel.DeleteClientIdentificationDetail(PartyIdentificationID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientIdentificationDetailAsync(System.Guid PartyIdentificationID, int loggedInUserID) {
            return base.Channel.DeleteClientIdentificationDetailAsync(PartyIdentificationID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientTaxDetails(System.Guid PartyID, System.Guid TaxRegistrationID, short TaxCountryL, short TaxRegistrationTyppeL, string TaxNo, short TaxOfficeL, bool ProvisionalTaxPayer, string InstitiutionClientNo, bool TaxPurposesResident, short ReasonNotRegisteredL, string Comments, int loggedInUserID) {
            return base.Channel.SaveClientTaxDetails(PartyID, TaxRegistrationID, TaxCountryL, TaxRegistrationTyppeL, TaxNo, TaxOfficeL, ProvisionalTaxPayer, InstitiutionClientNo, TaxPurposesResident, ReasonNotRegisteredL, Comments, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientTaxDetailsAsync(System.Guid PartyID, System.Guid TaxRegistrationID, short TaxCountryL, short TaxRegistrationTyppeL, string TaxNo, short TaxOfficeL, bool ProvisionalTaxPayer, string InstitiutionClientNo, bool TaxPurposesResident, short ReasonNotRegisteredL, string Comments, int loggedInUserID) {
            return base.Channel.SaveClientTaxDetailsAsync(PartyID, TaxRegistrationID, TaxCountryL, TaxRegistrationTyppeL, TaxNo, TaxOfficeL, ProvisionalTaxPayer, InstitiutionClientNo, TaxPurposesResident, ReasonNotRegisteredL, Comments, loggedInUserID);
        }
        
        public System.Data.DataSet GetClientTaxDetails(System.Guid ID, int loggedInUserID) {
            return base.Channel.GetClientTaxDetails(ID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetClientTaxDetailsAsync(System.Guid ID, int loggedInUserID) {
            return base.Channel.GetClientTaxDetailsAsync(ID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientTaxDetails(System.Guid TaxRegistrationID, int loggedInUserID) {
            return base.Channel.DeleteClientTaxDetails(TaxRegistrationID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientTaxDetailsAsync(System.Guid TaxRegistrationID, int loggedInUserID) {
            return base.Channel.DeleteClientTaxDetailsAsync(TaxRegistrationID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientBankingDetails(
                    System.Guid PartyID, 
                    System.Guid PartyBankID, 
                    string AccountHolder, 
                    string SignRights, 
                    short CountryL, 
                    short AccountTypeL, 
                    short BankL, 
                    string BranchName, 
                    string BranchNumber, 
                    string BranchTelNo, 
                    bool ActiveAccount, 
                    string AccountNo, 
                    string SWIFTNo, 
                    string IBANNo, 
                    string Comments, 
                    int loggedInUserID) {
            return base.Channel.SaveClientBankingDetails(PartyID, PartyBankID, AccountHolder, SignRights, CountryL, AccountTypeL, BankL, BranchName, BranchNumber, BranchTelNo, ActiveAccount, AccountNo, SWIFTNo, IBANNo, Comments, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientBankingDetailsAsync(
                    System.Guid PartyID, 
                    System.Guid PartyBankID, 
                    string AccountHolder, 
                    string SignRights, 
                    short CountryL, 
                    short AccountTypeL, 
                    short BankL, 
                    string BranchName, 
                    string BranchNumber, 
                    string BranchTelNo, 
                    bool ActiveAccount, 
                    string AccountNo, 
                    string SWIFTNo, 
                    string IBANNo, 
                    string Comments, 
                    int loggedInUserID) {
            return base.Channel.SaveClientBankingDetailsAsync(PartyID, PartyBankID, AccountHolder, SignRights, CountryL, AccountTypeL, BankL, BranchName, BranchNumber, BranchTelNo, ActiveAccount, AccountNo, SWIFTNo, IBANNo, Comments, loggedInUserID);
        }
        
        public System.Data.DataSet GetClientBankingDetails(System.Guid PartyID, int loggedInUserID) {
            return base.Channel.GetClientBankingDetails(PartyID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetClientBankingDetailsAsync(System.Guid PartyID, int loggedInUserID) {
            return base.Channel.GetClientBankingDetailsAsync(PartyID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientBankingDetail(System.Guid PartyBankID, int loggedInUserID) {
            return base.Channel.DeleteClientBankingDetail(PartyBankID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientBankingDetailAsync(System.Guid PartyBankID, int loggedInUserID) {
            return base.Channel.DeleteClientBankingDetailAsync(PartyBankID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientAddressDetails(System.Guid PartyID, System.Guid PartyAddressID, short AddressTypeL, short PostalAddressTypel, short PostalAddressServiceTypeL, string UnitNumber, string ComplexName, string StreetNumber, string StreetName, string Suburb, short ProvinceL, short CountryL, string AreaCode, string Comments, int loggedInUserID) {
            return base.Channel.SaveClientAddressDetails(PartyID, PartyAddressID, AddressTypeL, PostalAddressTypel, PostalAddressServiceTypeL, UnitNumber, ComplexName, StreetNumber, StreetName, Suburb, ProvinceL, CountryL, AreaCode, Comments, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientAddressDetailsAsync(System.Guid PartyID, System.Guid PartyAddressID, short AddressTypeL, short PostalAddressTypel, short PostalAddressServiceTypeL, string UnitNumber, string ComplexName, string StreetNumber, string StreetName, string Suburb, short ProvinceL, short CountryL, string AreaCode, string Comments, int loggedInUserID) {
            return base.Channel.SaveClientAddressDetailsAsync(PartyID, PartyAddressID, AddressTypeL, PostalAddressTypel, PostalAddressServiceTypeL, UnitNumber, ComplexName, StreetNumber, StreetName, Suburb, ProvinceL, CountryL, AreaCode, Comments, loggedInUserID);
        }
        
        public System.Data.DataSet GetClientAddressDetails(System.Guid PartyID, int loggedInUserID) {
            return base.Channel.GetClientAddressDetails(PartyID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetClientAddressDetailsAsync(System.Guid PartyID, int loggedInUserID) {
            return base.Channel.GetClientAddressDetailsAsync(PartyID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientAddressDetails(System.Guid PartyAddressID, int loggedInUserID) {
            return base.Channel.DeleteClientAddressDetails(PartyAddressID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientAddressDetailsAsync(System.Guid PartyAddressID, int loggedInUserID) {
            return base.Channel.DeleteClientAddressDetailsAsync(PartyAddressID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientEmailDetails(System.Guid PartyID, System.Guid PartyEmailID, string Address, short AddressType, bool IsPreferred, string Comments, int loggedInUserID) {
            return base.Channel.SaveClientEmailDetails(PartyID, PartyEmailID, Address, AddressType, IsPreferred, Comments, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientEmailDetailsAsync(System.Guid PartyID, System.Guid PartyEmailID, string Address, short AddressType, bool IsPreferred, string Comments, int loggedInUserID) {
            return base.Channel.SaveClientEmailDetailsAsync(PartyID, PartyEmailID, Address, AddressType, IsPreferred, Comments, loggedInUserID);
        }
        
        public System.Data.DataSet GetClientEmailDetails(System.Guid PartyID, int loggedInUserID) {
            return base.Channel.GetClientEmailDetails(PartyID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetClientEmailDetailsAsync(System.Guid PartyID, int loggedInUserID) {
            return base.Channel.GetClientEmailDetailsAsync(PartyID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientEmailDetails(System.Guid PartyEmailID, int loggedInUserID) {
            return base.Channel.DeleteClientEmailDetails(PartyEmailID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientEmailDetailsAsync(System.Guid PartyEmailID, int loggedInUserID) {
            return base.Channel.DeleteClientEmailDetailsAsync(PartyEmailID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientPhoneDetails(System.Guid PartyID, System.Guid PartyTelephoneID, short TypeL, string AreaCode, string Comments, short CountryL, bool IsPreferred, string Number, int loggedInUserID) {
            return base.Channel.SaveClientPhoneDetails(PartyID, PartyTelephoneID, TypeL, AreaCode, Comments, CountryL, IsPreferred, Number, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientPhoneDetailsAsync(System.Guid PartyID, System.Guid PartyTelephoneID, short TypeL, string AreaCode, string Comments, short CountryL, bool IsPreferred, string Number, int loggedInUserID) {
            return base.Channel.SaveClientPhoneDetailsAsync(PartyID, PartyTelephoneID, TypeL, AreaCode, Comments, CountryL, IsPreferred, Number, loggedInUserID);
        }
        
        public System.Data.DataSet GetClientPhoneDetails(System.Guid PartyID, int loggedInUserID) {
            return base.Channel.GetClientPhoneDetails(PartyID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetClientPhoneDetailsAsync(System.Guid PartyID, int loggedInUserID) {
            return base.Channel.GetClientPhoneDetailsAsync(PartyID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientPhoneDetails(System.Guid PartyTelephoneID, int loggedInUserID) {
            return base.Channel.DeleteClientPhoneDetails(PartyTelephoneID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientPhoneDetailsAsync(System.Guid PartyTelephoneID, int loggedInUserID) {
            return base.Channel.DeleteClientPhoneDetailsAsync(PartyTelephoneID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType SaveClientNoteDetails(System.Guid PartyID, System.Guid PartyNotesID, short CategoryL, string Description, int loggedInUserID) {
            return base.Channel.SaveClientNoteDetails(PartyID, PartyNotesID, CategoryL, Description, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> SaveClientNoteDetailsAsync(System.Guid PartyID, System.Guid PartyNotesID, short CategoryL, string Description, int loggedInUserID) {
            return base.Channel.SaveClientNoteDetailsAsync(PartyID, PartyNotesID, CategoryL, Description, loggedInUserID);
        }
        
        public System.Data.DataSet GetClientNoteDetails(System.Guid PartyID, int loggedInUserID) {
            return base.Channel.GetClientNoteDetails(PartyID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetClientNoteDetailsAsync(System.Guid PartyID, int loggedInUserID) {
            return base.Channel.GetClientNoteDetailsAsync(PartyID, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType DeleteClientNoteDetail(System.Guid PartyNotesID, int loggedInUserID) {
            return base.Channel.DeleteClientNoteDetail(PartyNotesID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> DeleteClientNoteDetailAsync(System.Guid PartyNotesID, int loggedInUserID) {
            return base.Channel.DeleteClientNoteDetailAsync(PartyNotesID, loggedInUserID);
        }
        
        public System.Data.DataSet GetByRegistrationNo(string RegistrationNo, int loggedInUserID) {
            return base.Channel.GetByRegistrationNo(RegistrationNo, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetByRegistrationNoAsync(string RegistrationNo, int loggedInUserID) {
            return base.Channel.GetByRegistrationNoAsync(RegistrationNo, loggedInUserID);
        }
        
        public System.Data.DataSet GetStaffByKeyRole(System.Nullable<short> KeyRoleL, int loggedInUserID) {
            return base.Channel.GetStaffByKeyRole(KeyRoleL, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetStaffByKeyRoleAsync(System.Nullable<short> KeyRoleL, int loggedInUserID) {
            return base.Channel.GetStaffByKeyRoleAsync(KeyRoleL, loggedInUserID);
        }
        
        public System.Data.DataSet GetEntitySharingSummary(System.Guid clientID, bool showDeleted) {
            return base.Channel.GetEntitySharingSummary(clientID, showDeleted);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEntitySharingSummaryAsync(System.Guid clientID, bool showDeleted) {
            return base.Channel.GetEntitySharingSummaryAsync(clientID, showDeleted);
        }
        
        public System.Data.DataSet GetActiveStaffByClient(System.Guid PartyID) {
            return base.Channel.GetActiveStaffByClient(PartyID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetActiveStaffByClientAsync(System.Guid PartyID) {
            return base.Channel.GetActiveStaffByClientAsync(PartyID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.CompositeType CheckUserControlPermission(short controlPermission, int loggedInUserID) {
            return base.Channel.CheckUserControlPermission(controlPermission, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.CompositeType> CheckUserControlPermissionAsync(short controlPermission, int loggedInUserID) {
            return base.Channel.CheckUserControlPermissionAsync(controlPermission, loggedInUserID);
        }
        
        public System.Data.DataSet GetEntityShareSummary(System.Guid clientID, bool showDeleted, System.DateTime viewDate, int loggedInUserID) {
            return base.Channel.GetEntityShareSummary(clientID, showDeleted, viewDate, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEntityShareSummaryAsync(System.Guid clientID, bool showDeleted, System.DateTime viewDate, int loggedInUserID) {
            return base.Channel.GetEntityShareSummaryAsync(clientID, showDeleted, viewDate, loggedInUserID);
        }
        
        public MySecureZoneApp.Api.TyrusClientService.StaffEntitySharing GetStaffEntitySharing(System.Guid entitySharingID, int loggedInUserID) {
            return base.Channel.GetStaffEntitySharing(entitySharingID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<MySecureZoneApp.Api.TyrusClientService.StaffEntitySharing> GetStaffEntitySharingAsync(System.Guid entitySharingID, int loggedInUserID) {
            return base.Channel.GetStaffEntitySharingAsync(entitySharingID, loggedInUserID);
        }
        
        public System.Data.DataSet GetEntitySharingHistorySummary(System.Guid clientID, int loggedInUserID) {
            return base.Channel.GetEntitySharingHistorySummary(clientID, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetEntitySharingHistorySummaryAsync(System.Guid clientID, int loggedInUserID) {
            return base.Channel.GetEntitySharingHistorySummaryAsync(clientID, loggedInUserID);
        }
        
        public bool SaveStaffEntitySharing(MySecureZoneApp.Api.TyrusClientService.StaffEntitySharing staffEntitySharing, int loggedInUserID) {
            return base.Channel.SaveStaffEntitySharing(staffEntitySharing, loggedInUserID);
        }
        
        public System.Threading.Tasks.Task<bool> SaveStaffEntitySharingAsync(MySecureZoneApp.Api.TyrusClientService.StaffEntitySharing staffEntitySharing, int loggedInUserID) {
            return base.Channel.SaveStaffEntitySharingAsync(staffEntitySharing, loggedInUserID);
        }
    }
}
