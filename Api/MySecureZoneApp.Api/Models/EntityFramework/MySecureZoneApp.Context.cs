//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MySecureZoneApp.Api.Models.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MySecureZone_Entities : DbContext
    {
        public MySecureZone_Entities()
            : base("name=MySecureZone_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ActivityLog> ActivityLogs { get; set; }
        public virtual DbSet<AdminMaintenance> AdminMaintenances { get; set; }
        public virtual DbSet<AdminUser> AdminUsers { get; set; }
        public virtual DbSet<DocumentMapping> DocumentMappings { get; set; }
        public virtual DbSet<HTMLPart> HTMLParts { get; set; }
        public virtual DbSet<lkpDocumentMarketingType> lkpDocumentMarketingTypes { get; set; }
        public virtual DbSet<lkpLinkTable> lkpLinkTables { get; set; }
        public virtual DbSet<lkpMaintenanceType> lkpMaintenanceTypes { get; set; }
        public virtual DbSet<lkpSite> lkpSites { get; set; }
        public virtual DbSet<MenuItem> MenuItems { get; set; }
        public virtual DbSet<Survey> Surveys { get; set; }
        public virtual DbSet<SurveyAnswer> SurveyAnswers { get; set; }
        public virtual DbSet<SurveyHTML> SurveyHTMLs { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<UserSession> UserSession { get; set; }
        public virtual DbSet<SiteTableLink> SiteTableLinks { get; set; }
    
        [DbFunction("MySecureZone_Entities", "fnAuthenticateAdminUser")]
        public virtual IQueryable<fnAuthenticateAdminUser_Result> fnAuthenticateAdminUser(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnAuthenticateAdminUser_Result>("[MySecureZone_Entities].[fnAuthenticateAdminUser](@UserName, @Password)", userNameParameter, passwordParameter);
        }
    
        [DbFunction("MySecureZone_Entities", "fnSiteTableLinkDetail")]
        public virtual IQueryable<fnSiteTableLinkDetail_Result> fnSiteTableLinkDetail(Nullable<int> siteID, Nullable<int> linkTableID)
        {
            var siteIDParameter = siteID.HasValue ?
                new ObjectParameter("SiteID", siteID) :
                new ObjectParameter("SiteID", typeof(int));
    
            var linkTableIDParameter = linkTableID.HasValue ?
                new ObjectParameter("LinkTableID", linkTableID) :
                new ObjectParameter("LinkTableID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnSiteTableLinkDetail_Result>("[MySecureZone_Entities].[fnSiteTableLinkDetail](@SiteID, @LinkTableID)", siteIDParameter, linkTableIDParameter);
        }
    
        [DbFunction("MySecureZone_Entities", "fnSiteTableLinkID")]
        public virtual IQueryable<fnSiteTableLinkID_Result> fnSiteTableLinkID(string siteColID)
        {
            var siteColIDParameter = siteColID != null ?
                new ObjectParameter("SiteColID", siteColID) :
                new ObjectParameter("SiteColID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnSiteTableLinkID_Result>("[MySecureZone_Entities].[fnSiteTableLinkID](@SiteColID)", siteColIDParameter);
        }
    
        [DbFunction("MySecureZone_Entities", "fnSplit")]
        public virtual IQueryable<fnSplit_Result> fnSplit(string @string)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnSplit_Result>("[MySecureZone_Entities].[fnSplit](@String)", stringParameter);
        }
    }
}
